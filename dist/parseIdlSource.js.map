{"version":3,"sources":["src/parseIdlSource.js"],"names":[],"mappings":";;;;;;;;;;;;qBAQS,cAAc;;kBANR,IAAI;;;;8BACC,kBAAkB;;;;AAKtC,SAAS,cAAc,CAAC,SAAiB,EAAE,OAAO,EAAiB;AAClE,QAAO,gBAAG,UAAU,CAAC,MAAM,CAAC,UAAA,QAAQ,EAAI;AACvC,MAAI;AACH,WAAQ,CAAC,MAAM,CAAC,4BAAQ,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;GACnD,CAAC,OAAM,CAAC,EAAE;AACV,WAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;GACpB;AACD,UAAQ,CAAC,WAAW,EAAE,CAAC;EACvB,CAAC,CAAC;CACH","file":"src/parseIdlSource.js","sourcesContent":["/* @flow */\r\n\r\nimport Rx from 'rx';\r\nimport WebIDL2 from '@motiz88/webidl2';\r\n\r\nexport\r\ndefault\r\nfunction parseIdlSource(idlSource: string, options): Rx.Observable {\r\n\treturn Rx.Observable.create(observer => {\r\n\t\ttry {\r\n\t\t\tobserver.onNext(WebIDL2.parse(idlSource, options));\r\n\t\t} catch(e) {\r\n\t\t\tobserver.onError(e);\r\n\t\t}\r\n\t\tobserver.onCompleted();\r\n\t});\r\n}\r\n"]}